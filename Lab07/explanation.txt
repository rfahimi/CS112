The output of the program demonstrates the difference between objects passed by value and reference in Java.
In the FunWithInteger function, Integer objects are passed by value, meaning that a new Integer object is created with the doubled value when 'x' is passed as an argument to DoubleMe.
However, the original 'x' remains unchanged.
Java's Integer class is immutable, meaning its value cannot be changed once it is created.

In the FunWithMyInt function, MyInt objects are passed by reference.
When a MyInt object 'x' is passed as an argument to the DoubleMe method, the value of m_value in x is doubled.
Changes to the myInt object passed as an argument or within its own methods are reflected in the original MyInt object because the method variable references the memory address of the original object.
Our MyInt class is mutable, meaning its stored value is allowed to change.
